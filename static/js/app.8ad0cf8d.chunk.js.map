{"version":3,"sources":["assets/TwangStudios.png","assets/TheBaggerLight.png","assets/lilwizard.png","styles.tsx","drawModal/drawModal.tsx","App.tsx"],"names":["module","exports","styles","StyleSheet","create","containerMain","flex","alignItems","justifyContent","position","marginLeft","marginRight","marginVertical","backgroundColor","width","borderRadius","backgroundMain","flexDirection","height","backgroundEditItem","textLight","color","margin","textDark","buttons","borderColor","borderWidth","itemContainer","padding","itemIcon","canvasWidth","canvasHeight","marginHorizontal","tslogo","tblogo","wizard","alignSelf","contentEditor","textInput","textInputShort","textInputContainerShort","textInputContainerMed","textInputContainer","canvas","slogan","DrawModal","id","onSave","useState","name","setName","isBag","setIsBag","description","setDescription","image","setImage","weight","setWeight","cost","setCost","useRef","useEffect","stored","localStorage","getItem","parsed","JSON","parse","current","loadSaveData","clear","console","error","View","style","ref","onChange","getSaveData","lazyRadius","TouchableOpacity","onPress","undo","Text","TextInput","value","onChangeText","placeholder","multiline","numberOfLines","toString","text","Number","keyboardType","setItem","stringify","removeItem","window","location","reload","ReactModal","setAppElement","getItems","key","archive","keys","Object","i","push","length","uuid","undefined","sort","a","b","App","items","setItems","at","selectedOption","setSelectedOption","SafeAreaView","Image","source","uri","tblight","ScrollView","map","item","log","disabled","hideGrid","saveData","immediateLoading","zoom"],"mappings":"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","file":"static/js/app.8ad0cf8d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/TwangStudios.5209b54d.png\";","module.exports = __webpack_public_path__ + \"static/media/TheBaggerLight.1a8c59ad.png\";","module.exports = __webpack_public_path__ + \"static/media/lilwizard.c57338c7.png\";","import { StyleSheet } from \"react-native\"\n\nexport const styles = StyleSheet.create({\n  containerMain: {\n    flex: 1,\n    alignItems: 'flex-start',\n    justifyContent: 'flex-start',\n    position: 'relative',\n    marginLeft: 20,\n    marginRight: 10,\n    marginVertical: 20,\n    backgroundColor:'#593F62',\n    width: '67%',\n    borderRadius:10,\n    \n  },\n  backgroundMain: {\n    backgroundColor: '#8499B1',\n    flex:1,\n    flexDirection: 'row',\n    height: '100%'\n  },\n  backgroundEditItem: {\n    backgroundColor: '#593F62',\n    marginRight: 20,\n    marginLeft: 10,\n    marginVertical:20,\n    width: '33%',\n    borderRadius: 10,\n\n  },\n  textLight: {\n    color: '#DBDBDB',\n    margin: 10,\n  },\n  textDark: {\n    color: '#272727',\n    margin: 10,\n  },\n  buttons: {\n    backgroundColor: '#8499B1',\n    margin: 20,\n    borderRadius: 5,\n    borderColor: '#36151E',\n    borderWidth: 3,\n  },\n  itemContainer: {\n    backgroundColor: '#7B6D8D',\n    margin: 10,\n    borderRadius: 5,\n    flexDirection: 'row',\n    padding: 5,\n\n  },\n  itemIcon: {\n    canvasWidth: '50%',\n    canvasHeight: '50%',\n    marginHorizontal: 5,\n  },\n  tslogo:{\n    height: 200,\n    width: 200,\n    alignItems: 'flex-end'\n  },\n  tblogo:{\n    height: 200,\n    width: 300,\n    padding: 5,\n  },\n  wizard:{\n    height: 250,\n    width: 300,\n    alignSelf:'flex-end',\n  },\n  contentEditor: {\n    flexDirection: 'column',\n  },\n  textInput: {\n    backgroundColor: '#DBDBDB'\n\n  },\n  textInputShort: {\n    backgroundColor: '#DBDBDB',\n    width:'80%'\n    \n  },\n  textInputContainerShort:{\n    backgroundColor: '#DBDBDB',\n    marginRight: '80%' ,\n    padding: 5,\n    borderRadius: 5,\n    marginVertical:2,\n    flexDirection:'row',\n  },\n  textInputContainerMed:{\n    backgroundColor: '#DBDBDB',\n    marginRight: '50%' ,\n    padding: 5,\n    borderRadius: 5,\n    marginVertical:2\n  },\n  textInputContainer: {  \n    backgroundColor: '#DBDBDB',\n    padding: 5,\n    borderRadius: 5,\n    marginVertical:2,\n  },\n  canvas: {\n\n  },\n  slogan: {\n    \n  }\n})","import React, { useEffect, useRef, useState } from \"react\";\nimport ReactModal from \"react-modal\";\nimport './drawModal';\nimport CanvasDraw from \"react-canvas-draw\";\nimport { Button, StyleSheet, View, Text, TouchableOpacityBase, TouchableOpacity } from \"react-native\"\nimport { TextInput } from \"react-native\";\nimport * as styles from '../styles' ;\nimport { registerRootComponent } from \"expo\";\n\nReactModal.setAppElement('body');\n\ntype SaveAction = {onSave: VoidFunction}\nexport default function DrawModal({id, onSave}: ItemId & SaveAction) {\n\n    const [name, setName] = useState(\"\")\n    const [isBag, setIsBag] = useState(false);\n    const [description, setDescription] = useState(\"\");\n    const [image, setImage]  = useState(\"\");\n    const [weight, setWeight] = useState(0);\n    const [cost, setCost] = useState(0);\n    const canvas = useRef<CanvasDraw>(null);\n\n    // When the id changes, we set the information onto our component\n    useEffect(() => {\n        const stored = localStorage.getItem(id);\n        if(!stored) {\n            console.error('item {} could not be found in local storage', id);\n            return;\n        }\n        const parsed = JSON.parse(stored);\n        setName(parsed.name || \"\");\n        setIsBag(parsed.isBag || false);\n        setDescription(parsed.description || \"\");\n        setWeight(parsed.weight || 0);\n        setCost(parsed.cost || 0);\n        if(!canvas.current) {\n            return;\n        }\n        if(parsed.image){\n            canvas.current.loadSaveData(parsed.image, true);\n        } else {\n            canvas.current.clear();\n        }\n\n    }, [id])\n\n    function save() {\n        localStorage.setItem(id, JSON.stringify({\n            name,\n            isBag,\n            image,\n            description,\n            weight,\n            cost,\n        }))\n        return onSave();\n    }\n    const onDelete = () => {\n        localStorage.removeItem(id);\n        window.location.reload();\n    };\n\n    return (\n        <View style={styles.styles.contentEditor}>\n            <View style={{marginVertical:2}}>\n                <CanvasDraw ref={canvas }\n                            onChange={(canvas) => setImage(canvas.getSaveData)} \n                            lazyRadius='0'\n                            style={{}}/>\n            </View>\n            <TouchableOpacity style={styles.styles.buttons} onPress={()=> {canvas.current!.undo()}} >\n                <Text style={styles.styles.textDark}>Undo</Text>\n            </TouchableOpacity>\n            <View style={styles.styles.textInputContainerMed}>\n                <TextInput value={name} \n                            onChangeText={setName} \n                            placeholder=\"Your item's name\" \n                            style={styles.styles.textInput}/>\n            </View>\n            \n            <View style={styles.styles.textInputContainer}>\n                <TextInput  value={description} \n                            onChangeText={setDescription} \n                            placeholder=\"Your item's description\" \n                            multiline numberOfLines={4} \n                            style={styles.styles.textInput}/>\n            </View>\n            <Text style={styles.styles.textLight}>Cost:  </Text>\n            <View style={styles.styles.textInputContainerShort}>\n                <TextInput  value={cost.toString()} \n                            onChangeText={(text) => setCost(Number(text))} \n                            placeholder=\"How much is this worth?\" \n                            keyboardType=\"numeric\"\n                            style={styles.styles.textInputShort}/>\n            </View>\n            <Text style={styles.styles.textLight}>Weight:  </Text>\n            <View style={styles.styles.textInputContainerShort}>\n                <TextInput  value={weight.toString()} \n                            onChangeText={(text) => setWeight(Number(text))} \n                            placeholder=\"How much dose this weigh?\" \n                            keyboardType=\"numeric\"\n                            style={styles.styles.textInputShort}/>\n            </View>\n            \n            {/*<label>\n                <input type=\"checkbox\" checked={isBag} onChange={setIsBag} />\n                Is bag?\n    </label>*/}\n           <TouchableOpacity style={styles.styles.buttons} onPress={()=> {save()}} >\n                <Text style={styles.styles.textDark}>Save</Text>\n            </TouchableOpacity>\n            <TouchableOpacity style={styles.styles.buttons} onPress={()=> onDelete()} >\n                <Text style={styles.styles.textDark}>Delete Item</Text>\n            </TouchableOpacity>\n            \n        </View>\n    )\n}\n","import { StatusBar } from 'expo-status-bar';\nimport { StyleSheet, Text, View, TouchableOpacity, ScrollView, Image, SafeAreaView, RefreshControlBase} from 'react-native';\nimport React, { useState } from 'react';\nimport DrawModal from './drawModal/drawModal';\nimport Select from 'react-select';\nimport CanvasDraw  from 'react-canvas-draw';\nimport Canvas from 'react-native-canvas';\nimport tslogo from './assets/TwangStudios.png';\nimport tblight from './assets/TheBaggerLight.png';\nimport tbdark from './assets/TheBaggerDark.png';\nimport wizard from './assets/lilwizard.png';\nimport * as uuid from 'uuid';\nimport * as styles from './styles' ;\n\nconst addItemToChar = (id: string, char: string|null) => {\n  const charName = char ? char : 'NOONE';\n  if(!Object.keys(localStorage).includes(char ? char : 'NOONE')){\n    localStorage.setItem(charName, JSON.stringify({items:[]}))\n  }\n  const {items} = JSON.parse(localStorage.getItem(charName)!)\n  \n  items.push(id)\n  localStorage.setItem(charName, items)\n  return;\n}\n\nconst getItems:()=>{id: string, name: string, image: string|undefined}[] = () => {\n  var archive = [],\n  keys = Object.keys(localStorage),\n  i = 0, key;\n  \n  for (; key = keys[i]; i++) {\n    const stored = localStorage.getItem(key)\n    if(!stored) {\n      console.error('item {} could not be found in local storage', key);\n    }\n    const parsed = JSON.parse(stored!);\n    archive.push({\n      id: key,\n      name: parsed.name, \n      image: parsed.image,\n  });\n  }\n  \n  if(archive.length == 0){\n    localStorage.setItem(uuid.v4(), JSON.stringify({\n      name: \"New Item\",\n      isBag: false,\n      image: undefined,\n      description: \"\",\n      weight: 0,\n      cost: 0,\n    }))\n    archive = getItems();\n  }\n  return archive.sort((a,b) => (a.name > b.name) ? 1 : -1);\n}\n\nexport default function App() {\n  const [items, setItems] = useState(getItems())\n  const [selectedOption, setSelectedOption] = useState<string>(items.at(0)!.id);\n  \n  const makeNewItem = () => {\n    const id = uuid.v4()\n    localStorage.setItem(id, JSON.stringify({\n      name: \"\",\n      isBag: false,\n      image: undefined,\n      description: \"\",\n      weight: 0,\n      cost: 0,\n    }))\n    \n    setItems(getItems);\n    setSelectedOption(id);\n    // addItemToChar(id, null);\n    window.location.reload()\n  }\n  \n  const onSave = () => {\n    setItems(getItems());\n    window.location.reload()\n  }\n\n  return ( \n    <SafeAreaView style={styles.styles.backgroundMain} >\n      <View style={styles.styles.containerMain}>\n        <View style={{flexDirection:'row'}}>\n          <Image source={{uri:tblight}} style={styles.styles.tblogo} />\n          <Image source={{uri:wizard}} style={styles.styles.wizard} />\n            <View style={{flexDirection:'column', justifyContent:'center'}}>\n            <TouchableOpacity style={styles.styles.buttons}>\n              <Text style={styles.styles.textDark} onPress={makeNewItem}>New Item</Text>\n            </TouchableOpacity>\n            {/*<TouchableOpacity style={styles.styles.buttons}>\n              <Text style={styles.styles.textDark}>New Character</Text>\n            </TouchableOpacity>*/}\n          </View>\n        </View>\n        \n        <ScrollView>\n          {items.map((item) => {\n            console.log(item)\n            return (\n              <TouchableOpacity style={styles.styles.itemContainer} onPress={() => setSelectedOption(item.id)} >\n                <CanvasDraw \n                            disabled\n                            hideGrid\n                            saveData={item.image}\n                            immediateLoading\n                            style={{zoom:'15%'}}\n                             />\n                <Text style={styles.styles.textDark}>{item.name}</Text>\n              </TouchableOpacity>\n            )\n          })}\n                  \n        </ScrollView>\n      </View>\n      <View style={styles.styles.backgroundEditItem}>\n        <View style={{alignItems:'flex-end'}} >\n          <Image source={{uri:tslogo}} style={styles.styles.tslogo} />\n        </View>\n        <View style={{alignItems:'center'}}>\n          <DrawModal id={selectedOption} onSave={onSave} />\n        </View>\n      </View>\n    </SafeAreaView>\n  );\n}\n\n"],"sourceRoot":""}